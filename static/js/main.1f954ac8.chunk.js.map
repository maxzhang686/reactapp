{"version":3,"sources":["component/DateDisplay.js","Clock/index.js","page/ClockWall.js","utilities/index.js","component/Stopwatch.js","component/Lists.js","component/Form.js","component/Button.js","component/Example-promise.js","component/Flickrimg.js","App.js","serviceWorker.js","index.js"],"names":["DateDisplay","react_default","a","createElement","this","props","message","Date","toLocaleDateString","owner","name","age","React","Component","Clock","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClick","e","resetTimer","setState","location","target","id","state","city","moment","tz","_this2","clearInterval","timerId","setInterval","time","getLocTime","_this3","TimeCard","LocBar","map","LocButton","key","onClick","LocName","LocImg","src","LocDate","format","LocTime","style","background","styled","div","_templateObject","_templateObject2","button","_templateObject3","_templateObject4","img","_templateObject5","span","_templateObject6","_templateObject7","ClockWall","Wall","src_Clock","ClockWall_templateObject","padLeft","number","concat","StopWatch","duration","isRunning","handleStart","timerID","newDuration","handleStop","ms","_parseDuration","seconds","Math","floor","slice","minutes","disabled","marginLeft","List","_ref","superheroes","hero","FormSignup","handleFieldChange","defineProperty","value","handleSubmit","preventDefault","console","log","username","email","margin","onSubmit","bind","className","htmlFor","type","onChange","Button","isLoading","current","handleFetchWeather","_callee","response","regenerator_default","wrap","_context","prev","next","axios","get","sent","objectSpread","data","t0","stop","weatherInfo","feelslike_c","buttonType","label","Example","then","catch","err","loge","Flickrimg","handldeFlickrimg","App","color","page_ClockWall","component_DateDisplay","toLocaleTimeString","Stopwatch","Lists","Form","Example_promise","component_Button","component_Flickrimg","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.1f954ac8.chunk.js","sourcesContent":["import React from \"react\";  \n\n\n\n\nclass DateDisplay extends React.Component{\n    render()    {\n         return (\n            \n            <div>\n                <h4>{this.props.message}</h4> \n                <h4>It is {new Date().toLocaleDateString()} now.</h4>\n                <h3>my name is {this.props.owner.name}</h3>\n                <h3>my Age is {this.props.owner.age}</h3>\n                \n               \n            </div>             \n        );   \n    }\n}\nexport default DateDisplay;\n\n\n// function DateDisplay(){\n//     return(\n\n//             <div>\n//                 <h1>It is {new Date().toLocaleTimeString()} now.</h1>            \n//             </div>\n//     );\n// }\n// export default DateDisplay;","import React from 'react';\n// import moment from 'moment';\nimport moment from 'moment-timezone';\nimport styled from 'styled-components';\n\n\n\nclass Clock extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n        location: this.props.city,\n    }\n}\n\ngetLocTime() {\n  switch(this.state.location) {\n      case 'Beijing':\n      return moment().tz(\"Asia/Shanghai\")\n      case 'Moscow':\n      return moment().tz(\"Europe/Moscow\")\n      case 'Sydney':\n      return moment().tz(\"Australia/Sydney\")\n      case 'New York':\n      return moment().tz(\"America/New_York\")\n      default:\n  }\n}\n\nhandleClick = (e) => {\n  this.resetTimer()\n  this.setState({\n      location: e.target.id,\n  })\n}\n\nresetTimer() {\n  clearInterval(this.timerId)\n  this.timerId = setInterval(() => {\n      this.setState({time : this.getLocTime()})\n  },200);\n}\n\ncomponentDidMount() {\n  this.resetTimer()\n}\n\ncomponentWillUnmount() {\n  clearInterval(this.timerId)\n}\n\n\n  render(){\n    return(\n    <TimeCard>\n    <LocBar>\n        {['Beijing', 'Sydney', 'Moscow', 'New York'].map((city) => \n            <LocButton id={city} key={city} onClick={this.handleClick}>{city}</LocButton>\n        )}\n    </LocBar>\n    <LocName>\n        {this.state.location}\n  \n    </LocName>\n    \n    <LocImg src={'./img/'+this.state.location+'.jpg'}/>\n   \n    <LocDate>{this.getLocTime().format('YYYY-MM-DD dddd')}</LocDate>\n    <br/>\n    <LocTime>\n\n          <div>\n          <span style={{background:'#766d6dc9'}}>{this.getLocTime().format('HH')}</span> : <span style={{background:'#766d6dc9'}}>{this.getLocTime().format('mm')}</span> : <span style={{background:'#766d6dc9'}}>{this.getLocTime().format('ss')}</span>\n          </div>\n\n        {/* <div style={{background:'#766d6dc9'}}>{this.getLocTime().format('HH')}</div>\n        <div style={{background:'#766d6dc9'}}>{this.getLocTime().format('mm')}</div>\n        \n        <div style={{background:'#766d6dc9'}}>{this.getLocTime().format('ss')}</div> */}\n   \n    </LocTime>\n   </TimeCard>\n\n\n\n\n    );\n  }\n}\n\nexport default Clock;\n\n\nconst TimeCard = styled.div`\n    display:inline-block;\n    text-align: center;\n    margin:10px;\n    position:relative;\n    width:300px;\n    height:350px;\n    background-color: #7b72722e;\n    box-shadow: 10px 10px 10px grey;\n    border-radius:10px;\n`;\n\nconst LocBar = styled.div`\n    position:absolute;\n    top:0;\n    left:0;\n    width:100%;\n    height:10%;\n`;\n\nconst LocButton = styled.button`\n    border:0;\n    outline:none;\n    display:inline-block;\n    width:25%;\n    height:100%;\n    background-color:white;\n    opacity:0.4;\n    &:hover {\n        opacity:0.6;\n    }\n`;\n\nconst LocName = styled.div`\n    position:absolute;\n    top:10%;\n    width:auto;\n    height:10%;\n    margin:10px;\n    font-size:20px;\n    font-weight:500;\n`;\n\nconst LocImg = styled.img`\n    width:100%;\n    height:80%;\n    border-radius:10px 10px 0 0;\n`;\n\nconst LocDate = styled.span`\n    font-size:20px;\n    font-weight:700;\n    color:#080808b3;\n`;\n\nconst LocTime = styled.div`\n    display:inline-block;\n    font-size:25px;\n    font-weight:700;\n    color:#08080885;\n`;\n\n\n\n","import React,{Component} from 'react';\nimport Clock from '../Clock'\n// import Clock from '../Clock/index02'\nimport styled from 'styled-components';\nimport '../App.css'\n\n   \nclass ClockWall extends Component{\n\n  render(){\n    // const tzs = ['Asia/Tokyo','America/New_York','Australia/Sydney','Europe/London'];\n    \n    return(\n    <Wall> \n      {/* <Clock tz={tzs[0]}/> */}\n      <Clock key={'Beijing'} city={'Beijing'}/>\n      <Clock key={'Sydney'} city={'Sydney'}/>\n    </Wall>\n    );\n  }\n}\nexport default ClockWall;\n\nconst Wall = styled.div`\n    width:100%;\n    height:auto;\n`;","export function parseDuration(ms) {\n  // const seconds = Math.floor(ms/1000);\n  //let second = (\"\"+(Math.floor(ms/ 1000) % 60)).slice(-2);\n  const seconds = (\"\"+(Math.floor(ms/ 1000) % 60)).slice(-2);\n \n  const minutes = Math.floor(ms/1000/60);\n  \n  return { seconds, minutes };\n  }\n\nexport function padLeft(number) {\n\n\n\nif (number < 10) {\n    return `0${number}`;\n  }\n    return `${number}`;\n\n\n  \n}\n  \n\n   ","import React from \"react\";\nimport {parseDuration, padLeft} from \"../utilities\"\n\n\n//event handing\nclass StopWatch extends React.Component{\n  \n  state = { duration:0, isRunning: false,}; \n  \n  handleStart = () => {\n  this.setState({ duration: 0,isRunning : true }); // new lap, clear the duration\n  \n  // update duration per second (per 1000 ms)\n  this.timerID = setInterval(() => {\n    const newDuration = this.state.duration + 200;\n    this.setState({ duration: newDuration }); }, 200);\n  }\n \nhandleStop = () => {\n  this.setState({isRunning : false})\n  if (this.timerID) {\n  clearInterval(this.timerID);\n  }\n}\n\n\n\n  render(){\n    const {seconds, minutes} = parseDuration(this.state.duration);\n    return(\n      <div>\n        <h2>{padLeft(minutes)}:{padLeft(seconds)}</h2>\n        <button onClick={this.handleStart} disabled={this.state.isRunning}>Start</button>\n        <button onClick={this.handleStop} style={{ marginLeft: 20 }}>Stop</button>\n      </div>\n      \n    );\n  }\n}\n\nexport default StopWatch;\n","import React from \"react\";\n\n\nfunction List({ superheroes }) {\n    return (\n    <div>\n    {superheroes.map((hero) => {\n        return <h3 key={hero}>{hero}</h3>;\n    })} \n    </div>\n    );\n    }\n\nexport default List;","import React from \"react\";\n\n\n\nclass FormSignup extends React.Component{\n    constructor(){\n        super();\n        this.state = {\n        username:'',\n        email:'',\n        city:'Sydney'\n        };\n    }\n    // handleUsernameChange(e) {\n    //     this.setState({ username: e.target.value });\n    //     }\n    //     handleEmailChange(e) {\n    //     this.setState({ email: e.target.value });\n    //     }\n    //     handleCityChange(e) {\n    //     this.setState({ city: e.target.value });\n    //     }\n\n    // handleUsernameChange =(event)=>{\n    //     this.setState({username: event.target.value})\n    // }\n    handleFieldChange= (e) =>   {\n        this.setState({\n        [e.target.name]: e.target.value,\n        });\n        }\n\n    handleSubmit =(e) => {\n         e.preventDefault(); \n         console.log('Sumitted:'); \n         console.log(this.state);\n         this.setState({\n            username:'n',\n            email:'',\n            city:'Sydney'\n         });\n    }\n\n\n    render(){\n    console.log(this.state.username);\n        return(\n            // <form style={{ width: 300, margin: 20 }}>\n            //     <div className=\"form-group\">\n            //     <label htmlFor=\"username\">Username</label>\n            //     <input type=\"text\" className=\"form-control\" id=\"username\" name=\"username\" \n            //     value={this.state.username} onChange={this.handleUsernameChange.bind(this)}/>\n            //     </div>\n\n            //     <div className=\"form-group\">\n            //         <label htmlFor=\"email\">Email</label>\n            //         <input type=\"email\" className=\"form-control\" id=\"email\" name=\"email\" \n            //         value={this.state.email} onChange={this.handleEmailChange.bind(this)} />\n            //     </div>\n\n            //     <div className=\"form-group\">\n            //         <label htmlFor=\"city\">City</label>\n            //         <select className=\"form-control\" id=\"city\" name=\"city\" \n            //         value={this.state.city} onChange={this.handleCityChange.bind(this)}>\n            //         <option value=\"Sydney\">Sydney</option>\n            //         <option value=\"Melbourne\">Melbourne</option>\n            //         <option value=\"Brisbane\">Brisbane</option>\n            //         </select>\n            //     </div>\n            // </form>\n            <form style={{margin: 20 }} onSubmit={this.handleSubmit.bind(this)}>\n            <div className=\"form-group\">\n            <label htmlFor=\"username\">Username</label>\n            <input type=\"text\" className=\"form-control\" id=\"username\" name=\"username\" \n            value={this.state.username} onChange={this.handleFieldChange.bind(this)}/>\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor=\"email\">Email</label>\n                <input type=\"email\" className=\"form-control\" id=\"email\" name=\"email\" \n                value={this.state.email} onChange={this.handleFieldChange.bind(this)} />\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor=\"city\">City</label>\n                <select className=\"form-control\" id=\"city\" name=\"city\" \n                value={this.state.city} onChange={this.handleFieldChange.bind(this)}>\n                <option value=\"Sydney\">Sydney</option>\n                <option value=\"Melbourne\">Melbourne</option>\n                <option value=\"Brisbane\">Brisbane</option>\n                </select>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">Sign up</button> \n        </form>\n        \n        \n        );\n    }\n}\nexport default FormSignup;","import React from 'react';\nimport axios from 'axios';\n\nclass Button extends React.Component{\n    state = {\n        isLoading:false,\n        current:{},\n        location: {},\n      };    \n\n    handleFetchWeather = async () => {\n        this.setState({isLoading:true});\n        //1.use async/await\n        try{\n          const response = await axios.get(\n            \"https://api.apixu.com/v1/current.json?key=a3b32e153da34193a69111804192707&q=Canberra\"\n            );\n          //use destructring to put all data's property-value pairs into state\n          this.setState({...response.data}); \n          console.log(response.data);\n        }catch(err){\n          console.log(err);\n          this.setState({isLoading:false}); \n        }\n       \n        \n    }\n    \n    render(){\n        //if(this.state.isLoading) return \"please wait...\";\n        const weatherInfo = `${this.state.location.name} is ${this.state.current.feelslike_c} degrees`;\n\n        return(\n            <div>\n                {this.state.isLoading && <div>{weatherInfo}</div>}\n                <button onClick={this.handleFetchWeather.bind(this)} \n                 //disabled={this.state.isLoading} \n                className={`btn btn-${this.props.buttonType}`}>\n                   {this.props.label}\n                </button>\n                \n            </div>\n        );\n    }\n}\nexport default Button; \n// function Button(props) {\n//     return (\n//     <button className={`btn btn-${props.buttonType}`}>\n//     {props.label}\n//     </button> );\n//     }\n\n// export default Button; \n","import React from 'react';\nimport axios from 'axios';\n\nclass Example extends React.Component{\n// constructor(){\n//   super();\n//   this.state ={ weather:{}};\n// }\n  state = {\n    isLoading: false,\n    current:{},\n    location: {},\n  };\n\n  async componentDidMount(){\n    // await axios\n    //   .get(\n    //     \"https://api.apixu.com/v1/current.json?key=a3b32e153da34193a69111804192707&q=Paris\"\n    //   )\n    //   .then(response => console.log(response))\n    //   ;\n    this.setState({isLoading:true});\n    //1.use async/await\n    try{\n      const response = await axios.get(\n        \"https://api.apixu.com/v1/current.json?key=a3b32e153da34193a69111804192707&q=Beijing\"\n        );\n      //use destructring to put all data's property-value pairs into state\n      this.setState({...response.data, isLoading:false});\n      console.log(response.data);\n    }catch(err){\n      console.log(err);\n      this.setState({isLoading:false});\n    }\n    \n    //2.use promise \n    axios\n    .get(\n      \"https://api.apixu.com/v1/current.json?key=a3b32e153da34193a69111804192707&q=Beijing\"\n    )\n    .then(response => {\n      //use destructring to put all data's property-value pairs into state\n      this.setState({...response.data})})\n    .catch(err => console.loge(err))\n    ;\n\n  }\n\n    \n\n    render(){\n      //if server hasn't reponded - show message \n      if(this.state.isLoading) return \"please wait...\";\n\n      //Show responded data\n        return(\n            <div>\n            {this.state.location.name} is {this.state.current.feelslike_c}\n            </div>\n        );\n    }\n}\nexport default Example;","import React from 'react';\n\n\nclass Flickrimg extends React.Component{\n  handldeFlickrimg = () =>{ \n    \n  }\n\n  render(){\n    return(\n      <div>\n        <botton ></botton>\n      </div>\n    );\n  }\n}\nexport default Flickrimg;","import React, { Component } from 'react';\n \nimport DateDisplay from \"./component/DateDisplay\";\n// import Card from './Component/Card';\n// import Clock01 from './component/Clock01';\nimport ClockWall from './page/ClockWall'\nimport StopWatch from './component/Stopwatch';\nimport List from \"./component/Lists\";\nimport FormSignup from \"./component/Form\";\nimport Button from './component/Button';\nimport Example from './component/Example-promise';\nimport Flickrimg from './component/Flickrimg';\n\nimport './App.css';\n\n\n\n// const title = ['Dog', 'Cat', 'Bird'];\n// const subTitle = ['t1','t2','t3'];\n// const img = [\n//   'https://picsum.photos/id/237/200/300',\n//   'https://picsum.photos/id/237/200/300',\n//   'https://picsum.photos/id/237/200/300'\n// ]\n\n\nconst superheroes = ['Batman', 'Superman'];\nclass App extends Component {\n\n// constructor(props){\n//   super(props);\n//   const time =  new Date().toLocaleTimeString();\n//   this.state = { \n//     time, }\n// }\n\n// componentDidMount(){\n// setInterval(()=>{\n//   this.setState({time:new Date().toLocaleTimeString()});\n// }\n//   ,100);\n// }\n\n  render() {\n    return ( \n      <div>  \n\n        \n        <div className=\"App\">\n            \n\n            <hr/>\n            {/* <Card  title={title[0]} subTitle={subTitle[0]} img={img[0]}/>\n            <Card  title={title[1]} subTitle={subTitle[1]} img={img[0]}/>\n            <Card  title={title[2]} subTitle={subTitle[2]} img={img[0]}/> */}\n            <h3 style={{color:'#ff0000'}}>Stateful component</h3>\n            <ClockWall/> \n\n            <hr/>\n            <h3 style={{color:'#ff0000'}}>React props and State</h3>\n            <DateDisplay \n            message={`Web Open at : ${new Date().toLocaleTimeString()}`} \n            owner={ {name:'jackie',age:'27'}}   \n            />\n\n            <hr/>\n            <h3 style={{color:'#ff0000'}}>Events handling in React</h3>\n            <StopWatch/>\n\n            <hr/>\n            <h3 style={{color:'#ff0000'}}>Rendering list in React</h3>\n            <List superheroes={superheroes} />\n\n            <hr/>\n            <h3 style={{color:'#ff0000'}}>Forms handling in React</h3>\n            <FormSignup/> \n            \n            <hr/>\n            <h3 style={{color:'#ff0000'}}>Ajax (Promise,Axios)</h3>\n            <Example/>\n\n            <hr/>\n            <h3 style={{color:'#ff0000'}}>Ajax (async/await): </h3>\n            <Button buttonType=\"primary\" label={<h1>Show temperature</h1>}/>\n\n\n            <hr/>\n            <h3 style={{color:'#ff0000'}}>Ajax (Fetch):</h3>\n            <Flickrimg/>\n            \n        </div>\n          \n\n\n      </div>\n\n      \n\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n   "],"sourceRoot":""}